version: '3'

services :

  mysql:
    container_name: starwars.mysql
    image: mysql:8.0
    env_file: ../.env
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DEFAULT_AUTHENTICATION_PLUGIN=caching_sha2_password
    command: --init-file /data/application/init.sql
    ports:
      - 3666:3306
    volumes:
      - starwars-mysql:/var/lib/mysql
      - ./init.sql:/data/application/init.sql
    healthcheck:
      test: mysqladmin ping -h localhost -P 3666 -u root --password=root
    restart: always

  app:
    container_name: starwars.app
    env_file:
      - ../.env
    build:
      context: ../
      dockerfile: .docker/Dockerfile
    environment:
      - NODE_OPTIONS=--max_old_space_size=8192
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_healthy

  caddy:
    container_name: caddy
    image: caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/site:/srv
      - ./caddy/caddy_data:/data
      - ./caddy/caddy_config:/config
    depends_on:
      - app
    restart: "unless-stopped"

#  nginx:
#    image: nginx
#    container_name: starwars.nginx
#    ports:
#      - "80:80"
#      - "443:443"
#    depends_on:
#      app:
#        condition: service_started
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf
#      - /var/www/certbot:/var/www/certbot
#      - /etc/letsencrypt:/etc/letsencrypt
#
#  certbot:
#    image: certbot/certbot
#    volumes:
#      - /var/www/certbot:/var/www/certbot
#      - /etc/letsencrypt:/etc/letsencrypt
#    command: certonly --webroot -w /var/www/certbot --force-renewal --email eliktronik@gmail.com -d ktronyk.stud.shpp.me --agree-tos
#    restart: "no"
#    depends_on:
#      nginx:
#        condition: service_started

volumes:
  starwars-mysql:
    driver: local
